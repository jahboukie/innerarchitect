"""Initial migration

Revision ID: 1f086b0adc95
Revises: 
Create Date: 2025-05-28 19:29:34.551184

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f086b0adc95'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nlp_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('technique', sa.String(length=30), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('steps', sa.Text(), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('estimated_time', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('technique_usage_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('technique', sa.String(length=30), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('avg_rating', sa.Float(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'technique', name='_session_technique_uc')
    )
    with op.batch_alter_table('technique_usage_stats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_technique_usage_stats_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_technique_usage_stats_technique'), ['technique'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('profile_image_url', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('verification_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('reset_password_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('auth_provider', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('conversation_context',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('themes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flask_dance_oauth',
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('browser_session_key', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('token', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'browser_session_key', 'provider', name='uq_user_browser_session_key_provider')
    )
    op.create_table('journal_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('mood', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nlp_exercise_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['nlp_exercise.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('privacy_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('data_collection', sa.Boolean(), nullable=True),
    sa.Column('progress_tracking', sa.Boolean(), nullable=True),
    sa.Column('personalization', sa.Boolean(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('marketing_emails', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('plan_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('is_trial', sa.Boolean(), nullable=True),
    sa.Column('trial_plan', sa.String(), nullable=True),
    sa.Column('trial_started_at', sa.DateTime(), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('trial_converted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_table('technique_effectiveness',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('technique', sa.String(length=30), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('situation', sa.String(length=100), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usage_quota',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(length=64), nullable=True),
    sa.Column('browser_session_id', sa.String(length=64), nullable=True),
    sa.Column('quota_type', sa.String(length=30), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('messages_used_today', sa.Integer(), nullable=True),
    sa.Column('exercises_used_today', sa.Integer(), nullable=True),
    sa.Column('analyses_used_this_month', sa.Integer(), nullable=True),
    sa.Column('last_reset_date', sa.DateTime(), nullable=True),
    sa.Column('last_monthly_reset_date', sa.DateTime(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('week_start', sa.Date(), nullable=True),
    sa.Column('month_start', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('usage_quota', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_usage_quota_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_quota_month_start'), ['month_start'], unique=False)
        batch_op.create_index(batch_op.f('ix_usage_quota_week_start'), ['week_start'], unique=False)

    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('primary_goal', sa.String(length=50), nullable=True),
    sa.Column('custom_goal', sa.String(length=200), nullable=True),
    sa.Column('experience_level', sa.String(length=20), nullable=True),
    sa.Column('communication_style', sa.String(length=20), nullable=True),
    sa.Column('show_explanations', sa.Boolean(), nullable=True),
    sa.Column('first_challenge', sa.Text(), nullable=True),
    sa.Column('challenge_intensity', sa.Integer(), nullable=True),
    sa.Column('enable_reminders', sa.Boolean(), nullable=True),
    sa.Column('reminder_frequency', sa.String(length=20), nullable=True),
    sa.Column('preferred_time', sa.Time(), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=True),
    sa.Column('onboarding_step', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('user_message', sa.Text(), nullable=False),
    sa.Column('ai_response', sa.Text(), nullable=False),
    sa.Column('mood', sa.String(length=20), nullable=True),
    sa.Column('nlp_technique', sa.String(length=30), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('context_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['context_id'], ['conversation_context.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_memory_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('context_id', sa.Integer(), nullable=False),
    sa.Column('memory_type', sa.String(length=30), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('source_message_id', sa.Integer(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('relevance', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['context_id'], ['conversation_context.id'], ),
    sa.ForeignKeyConstraint(['source_message_id'], ['chat_history.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('conversation_memory_item')
    op.drop_table('chat_history')
    op.drop_table('user_preferences')
    with op.batch_alter_table('usage_quota', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usage_quota_week_start'))
        batch_op.drop_index(batch_op.f('ix_usage_quota_month_start'))
        batch_op.drop_index(batch_op.f('ix_usage_quota_date'))

    op.drop_table('usage_quota')
    op.drop_table('technique_effectiveness')
    op.drop_table('subscriptions')
    op.drop_table('privacy_settings')
    op.drop_table('nlp_exercise_progress')
    op.drop_table('journal_entry')
    op.drop_table('flask_dance_oauth')
    op.drop_table('conversation_context')
    op.drop_table('users')
    with op.batch_alter_table('technique_usage_stats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_technique_usage_stats_technique'))
        batch_op.drop_index(batch_op.f('ix_technique_usage_stats_session_id'))

    op.drop_table('technique_usage_stats')
    op.drop_table('nlp_exercise')
    # ### end Alembic commands ###
